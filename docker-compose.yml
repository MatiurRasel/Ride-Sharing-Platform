# services define individual containers and their configurations
services:
  
  # keycloak (identity provider) database
  keycloak-database:
    image: postgres:16.0
    container_name: keycloak-database
    restart: unless-stopped
    volumes:
      - ${KC_POSTGRES_BACKUP_LOCATION}:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${KC_POSTGRES_DB}
      POSTGRES_USER: ${KC_POSTGRES_USER}
      POSTGRES_PASSWORD: ${KC_POSTGRES_PASS}
    ports:
      - "5432:5432"
    networks:
      - keycloak-local
  
  # keycloak (identity provider)
  keycloak:
    depends_on:
      - keycloak-database
    image: quay.io/keycloak/keycloak:22.0.3
    container_name: keycloak
    restart: unless-stopped
    environment:
      KEYCLOAK_ADMIN: ${KC_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KC_ADMIN_PASSWORD}
    command:
      - start-dev
    ports:
      - "9990:8080"
      - "9991:8081"
    networks:
      - keycloak-local
      
  
  
  # api gateway / reverse proxy
  api-gateway:
    image: api-gateway
    container_name: api-gateway
    build:
      context: .
      dockerfile: src/Common/RideSharing.APIGateway/Dockerfile
    ports:
      - "5000:8080"
      - "7000:8081"
    networks:
      - api-net
    restart: unless-stopped


  # db for ridesharing platform
  ride-sharing-api-db:
    image: "mcr.microsoft.com/mssql/server:2022-latest"
    container_name: ride-sharing-api-db
    ports: # not actually needed, because the two services are on the same network
      - "6002:1433"
    environment:
      - ACCEPT_EULA=y
      - SA_PASSWORD=123456Aa@
    networks:
      - api-net
    restart: unless-stopped

  # admin api (contains all generic crud endpoints)
  ride-sharing-api:
    image: ride-sharing-api
    container_name: ride-sharing-api
    build:
      context: .
      dockerfile: src/RideSharingService/RideSharing.API/Dockerfile
    ports:
      - "5002:8080"
      - "7002:8081"
    networks:
      - api-net
    restart: unless-stopped
    depends_on:
      - ride-sharing-api-db

  # customer api (riders & customers only)
  ride-sharing-customer-api:
    image: ride-sharing-customer-api
    container_name: ride-sharing-customer-api
    build:
      context: .
      dockerfile: src/RideSharingService/RideSharing.CustomerAPI/Dockerfile
    ports:
      - "5003:8080"
      - "7003:8081"
    networks:
      - api-net
    restart: unless-stopped
    depends_on:
      - ride-sharing-api-db


# volumes are a physical areas of disk space shared between the host and the containers
# volumes:


# networks define the communication rules between containers, and between a container and the host
networks:
  keycloak-local: # network for keycloak communication
  api-net: # network for api communications
